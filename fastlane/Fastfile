# frozen_string_literal: true

import '../ios/fastlane/Fastfile'
import '../android/fastlane/Fastfile'

desc 'Flutterの依存関係をインストールします。'
lane :install_flutter_dependencies do
  Dir.chdir('../') do
    sh('flutter pub get --no-example')
  end
end

desc '自動コードを生成します。'
lane :generate do
  install_flutter_dependencies

  Dir.chdir('../') do
    sh('dart run build_runner build --delete-conflicting-outputs')
  end
end

desc '前回のバージョンからのGit履歴に基づきバージョン名をインクリメントします。'
lane :bump_version do
  latest_tag_name = Dir.chdir('../') do
    sh("git describe --tags --abbrev=0 --match='beta/*'")
  end

  full_version_name_matched = %r{^.*/(\d+\.\d+\.\d+\+\d+)$}.match(latest_tag_name)
  full_version_name = full_version_name_matched[1]

  build_number_matched = /^(\d+\.\d+\.\d+)\+(\d+)$/.match(full_version_name)
  build_number = build_number_matched[2].to_i

  UI.success "Full version name: #{full_version_name}"
  UI.success "Build number: #{build_number}"

  analyze_commits(match: full_version_name)

  new_version_name = lane_context[SharedValues::RELEASE_NEXT_VERSION]

  Dir.chdir('../') do
    sh("dart run cider version \"#{new_version_name}+#{build_number}\"")
    sh('dart run cider bump build')
  end
end

desc 'ベータバージョンのタグを追加します。'
lane :add_beta_tag do
  full_version_name = get_full_version_name

  add_git_tag(
    grouping: 'beta',
    includes_lane: false,
    build_number: full_version_name
  )
end

desc '最新のタグに一致するようにバージョン名を変更します。'
lane :set_full_version_name_from_latest_tag do
  latest_tag_name = Dir.chdir('../') do
    sh("git describe --tags --abbrev=0 --match='beta/*'")
  end

  matched = %r{^.*/(\d+\.\d+\.\d+\+\d+)$}.match(latest_tag_name)

  full_version_name = matched[1]

  Dir.chdir('../') do
    sh("dart run cider version #{full_version_name}")
  end
end

private_lane :get_full_version_name do
  Dir.chdir('../') do
    sh('dart run cider version').chomp
  end
end

private_lane :generate_release_notes do
  previous_tag_name = Dir.chdir('../') do
    sh("git describe --tags --abbrev=0 $(git rev-list --tags='beta/*' --max-count=2 | tail -n 1)")
  end

  UI.success "Previous tag name: #{previous_tag_name}"

  analyze_commits(match: previous_tag_name)
  conventional_changelog(
    format: 'plain',
    display_title: false,
    display_links: false
  )
end
