name: CI/Flutter

on:
  pull_request:
    branches: [main]

env:
  JAVA_VERSION: "12.x"

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.job }}-${{ github.head_ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3

      - name: Install reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - name: Install Code Spell Checker
        run: npm install -g cspell

      - name: Check Code Spell
        run: cspell '**/*.{dart,swift,kt}' > cspell.log

      - name: Run reviewdog for Code Spell Checker
        if: failure()
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cat cspell.log | reviewdog -efm='%f:%l:%c - %m' -name='Code Spell Checker' -reporter='github-pr-review'

      - uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}

      # asdf用のバージョン指定ファイルからFlutterのバージョンを読み取り、
      # "-stable" サフィックスを削除したものを環境変数に格納する
      - name: Get Flutter version
        id: get-flutter-version
        run: |
          asdf_flutter_version="$(cat .tool-versions | awk '{print $2}')"
          flutter_version="$(echo $asdf_flutter_version | sed -e 's/-stable//g')"
          echo "flutter-version=$flutter_version" >> $GITHUB_OUTPUT

      - name: Cache Flutter
        uses: actions/cache@v3
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.OS }}-flutter-${{ steps.get-flutter-version.outputs.flutter-version }}

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.get-flutter-version.outputs.flutter-version }}

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Generate environment config file
        run: |
          cp .env.example .env
          ./use_env.sh

      - name: Generate automatic codes
        run: flutter pub run build_runner build

      - name: Flutter analyze
        run: flutter analyze --fatal-infos > flutter-analyze.log

      - name: Run reviewdog for Flutter Analyzer
        if: failure()
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cat flutter-analyze.log | reviewdog -efm='%#%t%.%# • %m • %f:%l:%c %r' -name='Flutter Analyzer' -reporter='github-pr-review'
