name: CI / Code

on:
  pull_request:
    branches:
      - "main"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  check-spell:
    name: Check spell
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest
      - name: Install Code Spell Checker
        run: npm install -g cspell
      - name: Check Code Spell
        run: cspell '**/*.{dart,swift,kt}' > cspell.log
      - name: Run reviewdog for Code Spell Checker
        if: failure()
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cat cspell.log | reviewdog -efm='%f:%l:%c - %m' -name='Code Spell Checker' -reporter='github-pr-review'

  lint-flutter:
    name: Lint Flutter
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest
      - name: Setup Flutter
        uses: ./.github/actions/setup-flutter
      - name: Setup Ruby
        uses: ./.github/actions/setup-ruby
      - name: Generate uncommited Flutter files
        uses: ./.github/actions/generate-uncommited-flutter-files
        with:
          firebase-options-dart-base64-emulator: ${{ secrets.FIREBASE_OPTIONS_DART_BASE64_EMULATOR }}
          firebase-options-dart-base64-dev: ${{ secrets.FIREBASE_OPTIONS_DART_BASE64_DEV }}
      - name: Flutter analyze
        run: flutter analyze --fatal-infos > flutter-analyze.log
      - name: Run reviewdog for Flutter Analyzer
        if: failure()
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cat flutter-analyze.log | reviewdog -efm='%#%t%.%# • %m • %f:%l:%c %r' -name='Flutter Analyzer' -reporter='github-pr-review'

  test-flutter:
    name: Test Flutter
    permissions:
      checks: write
      contents: read
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Flutter
        uses: ./.github/actions/setup-flutter
      - name: Setup Ruby
        uses: ./.github/actions/setup-ruby
      - name: Generate uncommited Flutter files
        uses: ./.github/actions/generate-uncommited-flutter-files
        with:
          firebase-options-dart-base64-emulator: ${{ secrets.FIREBASE_OPTIONS_DART_BASE64_EMULATOR }}
          firebase-options-dart-base64-dev: ${{ secrets.FIREBASE_OPTIONS_DART_BASE64_DEV }}
      - name: Run Flutter test
        run: flutter test --machine > flutter-test-results.log
      - uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: "Test Flutter results"
          path: "flutter-test-results.log"
          reporter: "flutter-json"

  build-ios-dev-app:
    name: Build iOS dev app
    permissions:
      contents: read
      pull-requests: read
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - name: Setup Flutter
        uses: ./.github/actions/setup-flutter
      - name: Setup Xcode
        uses: ./.github/actions/setup-xcode
      - name: Setup CocoaPods
        uses: ./.github/actions/setup-cocoapods
      - name: Setup Ruby
        uses: ./.github/actions/setup-ruby
      - name: Generate uncommited Flutter files
        uses: ./.github/actions/generate-uncommited-flutter-files
        with:
          firebase-options-dart-base64-emulator: ${{ secrets.FIREBASE_OPTIONS_DART_BASE64_EMULATOR }}
          firebase-options-dart-base64-dev: ${{ secrets.FIREBASE_OPTIONS_DART_BASE64_DEV }}
      - name: Generate uncommited iOS files
        uses: ./.github/actions/generate-uncommited-ios-files
        with:
          google-service-plist-base64-dev: ${{ secrets.GOOGLE_SERVICE_PLIST_BASE64_DEV }}
      - name: Generate env file
        uses: ./.github/actions/generate-env-file
        with:
          env-base64: ${{ secrets.ENV_BASE64 }}
      - name: Generate App Store Connect API key file
        run: echo "${{ secrets.APP_STORE_CONNECT_API_KEY_P8_BASE64 }}" | base64 -d > fastlane/app-store-connect-api-key.p8
      - name: Build iOS dev app
        run: bundle exec fastlane ios build_dev

  build-android-dev-app:
    name: Build Android dev app
    permissions:
      contents: read
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Flutter
        uses: ./.github/actions/setup-flutter
      - name: Setup Gradle
        uses: ./.github/actions/setup-gradle
      - name: Setup Ruby
        uses: ./.github/actions/setup-ruby
      - name: Generate uncommited Flutter files
        uses: ./.github/actions/generate-uncommited-flutter-files
        with:
          firebase-options-dart-base64-emulator: ${{ secrets.FIREBASE_OPTIONS_DART_BASE64_EMULATOR }}
          firebase-options-dart-base64-dev: ${{ secrets.FIREBASE_OPTIONS_DART_BASE64_DEV }}
      - name: Generate uncommited Android files
        uses: ./.github/actions/generate-uncommited-android-files
        with:
          google-service-json-base64-dev: ${{ secrets.GOOGLE_SERVICE_JSON_BASE64_DEV }}
      - name: Build Android dev app
        run: flutter build appbundle --dart-define SERVER_ENV=dev
