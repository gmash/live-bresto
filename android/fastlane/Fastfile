# frozen_string_literal: true

import '../../fastlane/Fastfile'

default_platform(:android)

platform :android do
  desc 'Dev環境向けアプリ(APK)をビルドします。'
  lane :build_dev do
    Dir.chdir('../../') do
      sh('flutter build apk --flavor dev --dart-define-from-file dart-defines_dev.json')
    end

    lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH] = '../build/app/outputs/flutter-apk/app-dev-release.apk'
  end

  desc 'Dev環境向けアプリ(App Bundle)をビルドします。'
  lane :build_dev_aab do
    Dir.chdir('../../') do
      sh('flutter build appbundle --flavor dev --dart-define-from-file dart-defines_dev.json')
    end

    lane_context[SharedValues::GRADLE_AAB_OUTPUT_PATH] = '../build/app/outputs/bundle/devRelease/app-dev-release.aab'
  end

  desc 'Dev環境向けアプリをFirebase App Distributionにデプロイします。'
  lane :deploy_dev do
    # action で利用するパスなので、fastlane コマンドを実行するディレクトリからの相対パスで指定
    firebase_service_credentials_file_path = '../fastlane/firebase-app-distribution-develop.json'

    release_notes = generate_release_notes

    build_dev

    firebase_app_distribution(
      app: '1:496690593871:android:164876b2b4d6e7da05ea3a',
      service_credentials_file: firebase_service_credentials_file_path,
      release_notes:,
      groups: 'testers'
    )
  end

  desc 'Dev環境向けアプリをGoogle Playにデプロイします。'
  lane :deploy_dev_google_play do
    package_name = 'com.rainbeek.isekai.dev'
    # action で利用するパスなので、fastlane コマンドを実行するディレクトリからの相対パスで指定
    google_play_json_key_path = 'fastlane/google-play-service-account-key.json'

    build_dev_aab

    upload_to_play_store(
      package_name:,
      release_status: 'completed',
      track: 'internal',
      json_key: google_play_json_key_path
    )
  end
end
